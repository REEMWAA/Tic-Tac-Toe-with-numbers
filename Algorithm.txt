Algorithm of the game:
1)Printing the game board.
2)Take input from the first player. 
3) check for winning or it’s a tie 
4)switch the player.
5)check for winning again. 
6)Repeat the previous steps till one of the two players wins.

Algorithm’s discussion: 
In order to print the game board so I decided to make a list of “9” indexes, each index represents the place that the player will play in it.

board=[0,0,0,0,0,0,0,0 ,0]
 
as in python, we don’t have to declare the indexes types but I put the indexes all numbers to let the user input the number that he wants to play within the position of the index.
Function for the game board 
def tic_tac_toe ():
    print ('|' ,board[0],'|',board[1] ,'|', board[2],'|')
    print ('--------------')
    print ('|' ,board[3],'|',board[4] ,'|', board[5],'|')
    print ('--------------')
    print ('|' ,board[6],'|',board[7] ,'|', board[8],'|')

After that, I make a function to make the shape of the real game board.
Function that takes two parameters and swap them one for the place that the user wants to play in and the number that the user wants to play with (the place the player wants to play in will be the index number that the user will play with and the number that the user wants to play with will be the number that will be put in the index)

#this function will move the number input in the place we choose from the indexes of the list (game board )

def move(x1,x2):
    board[x2] = x1
    tic_tac_toe()

For defense two functions to check if the input number is even or odd as the first player will play with odd numbers only and the second player will play with even numbers only.
After that we call the move() function to take the two parameters one for the place and the other for the number to play with.

# check if the input number is odd or not

def odd (x, x2):

    while  (x%2==0):
        x = int(input ('enter an odd number'))
        if x>8:
            print("enter number in range [0:7]")

    #Nothing here because if we get out of the while is because it's a valid number (we're not checking numbers out of range or anything)
    move (x ,x2)

# check if the input number is even or not

def even (x ,x2) :

    while  (x%2!=0):
        x = int(input ('enter an even number'))
        if x > 8:
            print("enter number in range [0:8]")
            x = int(input('enter an even number'))

    #Same here
    move (x ,x2)
 
function to check for the winner with all possibilities and if any player wins I will stop the game (  return True #To know if we need to stop the game)
And if not I will continue the game (return False)
#check for the winner

def winner ():
    if ((board[0]+board [1]+board[2]>=15 or
        board[0]+board [3]+board[6]>=15 or
        board[1]+board [4]+board[7]>=15 or
        board[3]+board [4]+board[5]>=15 or
        board[2]+board [5]+board[8]>=15 or
        board[6]+board [7]+board[8]>=15)) :
        print ('you are the winner')
        print("congratulations ")
        return True #To know if we need to stop the game

    else:
        return False

function to switch player if there isn’t any player win
# to switch the players and taking turns

def turn(s):
    print ('its '+ s +' turn')
    x = int (input ('enter number to play with : '))
    x1 = int (input ('enter the place number: '))

    if player == 'A':
        even(x, x1)
    else:
        odd(x, x1)






printing the game rules for the players 

print('Tic Tac Toe')
print("Each player has two inputs the first input is  for the number he wants to play with "
      "(player [a] plays by even numbers and player [b] play with odd numbers )"
      "the second input is for the place he wants to play in from [0,1,2,3,4,5,6,7,8]  in the game board .")

print ('player A should enter even numbers only'+' and player B should enter odd numbers only')

print ('player A should enter even numbers only'+' and player B should enter odd numbers only')
print ('the player with the even numbers start')



 call the game board and check for the continuity of the game 
tic_tac_toe ()

while True:      #to continue the game
    turn(player)
    if winner():
        break
    else:
        if player == 'A':
            player = 'B'
        else:
            player = 'A'



